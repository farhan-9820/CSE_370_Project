-- Student Table
CREATE TABLE Student (
    id INT PRIMARY KEY,
    group_id INT NULL,
    name VARCHAR(255),
    mail VARCHAR(255),
    cred_count INT,
    curr_sem INT
);

-- StudentPass Table
CREATE TABLE StudentPass (
    stu_id INT PRIMARY KEY,
    pass VARCHAR(255),
    FOREIGN KEY (stu_id) REFERENCES Student(id)
);


-- StudentInterests Table
CREATE TABLE StudentInterests (
    stu_id INT,
    interest VARCHAR(255),
    PRIMARY KEY (stu_id, interest),
    FOREIGN KEY (stu_id) REFERENCES Student(id)
);

-- StudentLinks Table
CREATE TABLE StudentLinks (
    stu_id INT,
    link VARCHAR(255),
    PRIMARY KEY (stu_id, link),
    FOREIGN KEY (stu_id) REFERENCES Student(id)
);

-- Faculty Table
CREATE TABLE Faculty (
    id INT PRIMARY KEY,
    name VARCHAR(255),
    mail VARCHAR(255),
    slot_available BOOLEAN,
    status BOOLEAN
);

-- FacultyPass Table
CREATE TABLE FacultyPass (
    fac_id INT PRIMARY KEY,
    pass VARCHAR(255),
    FOREIGN KEY (fac_id) REFERENCES Faculty(id)
);

-- FacultyInterests Table
CREATE TABLE FacultyInterests (
    fac_id INT,
    interest VARCHAR(255),
    PRIMARY KEY (fac_id, interest),
    FOREIGN KEY (fac_id) REFERENCES Faculty(id)
);

-- FacultyLinks Table
CREATE TABLE FacultyLinks (
    fac_id INT,
    link VARCHAR(255),
    PRIMARY KEY (fac_id, link),
    FOREIGN KEY (fac_id) REFERENCES Faculty(id)
);

-- FacultyConsultationHrs Table
CREATE TABLE FacultyConsultationHrs (
    fac_id INT,
    con_hour VARCHAR(255),
    PRIMARY KEY (fac_id, con_hour),
    FOREIGN KEY (fac_id) REFERENCES Faculty(id)
);

-- Admin Table
CREATE TABLE Admin (
    id INT PRIMARY KEY,
    pass VARCHAR(255),
    name VARCHAR(255),
    mail VARCHAR(255)
);

-- Group Table
CREATE TABLE `Group` (
    id INT PRIMARY KEY,
    topic VARCHAR(255),
    sup_id INT,
    cosup1_id INT,
    cosup2_id INT,
    FOREIGN KEY (sup_id) REFERENCES Faculty(id),
    FOREIGN KEY (cosup1_id) REFERENCES Faculty(id),
    FOREIGN KEY (cosup2_id) REFERENCES Faculty(id)
);

-- GroupInterests Table
CREATE TABLE GroupInterests (
    group_id INT,
    interest VARCHAR(255),
    PRIMARY KEY (group_id, interest),
    FOREIGN KEY (group_id) REFERENCES `Group`(id)
);

-- ReqSupervisor Table
CREATE TABLE ReqSupervisor (
    group_id INT,
    sup_id INT,
    PRIMARY KEY (group_id, sup_id),
    FOREIGN KEY (group_id) REFERENCES `Group`(id),
    FOREIGN KEY (sup_id) REFERENCES Faculty(id)
);

-- ReqCosupervisor Table
CREATE TABLE ReqCosupervisor (
    group_id INT,
    cosup_id INT,
    PRIMARY KEY (group_id, cosup_id),
    FOREIGN KEY (group_id) REFERENCES `Group`(id),
    FOREIGN KEY (cosup_id) REFERENCES Faculty(id)
);

-- FacultyFile Table
CREATE TABLE FacultyFile (
    id INT PRIMARY KEY,
    fac_id INT,
    subject VARCHAR(255),
    remarks VARCHAR(255),
    file_link VARCHAR(255),
    date DATETIME,
    FOREIGN KEY (fac_id) REFERENCES Faculty(id)
);

-- GroupFile Table
CREATE TABLE GroupFile (
    id INT PRIMARY KEY,
    group_id INT,
    reply_file_id INT,
    subject VARCHAR(255),
    remarks VARCHAR(255),
    file_link VARCHAR(255),
    date DATETIME,
    FOREIGN KEY (group_id) REFERENCES `Group`(id),
    FOREIGN KEY (reply_file_id) REFERENCES FacultyFile(id)
);

-- Meet Table
CREATE TABLE Meet (
    group_id INT,
    fac_id INT,
    date_time DATETIME,
    duration INT,
    status VARCHAR(255),
    PRIMARY KEY (group_id, fac_id, date_time),
    FOREIGN KEY (group_id) REFERENCES `Group`(id),
    FOREIGN KEY (fac_id) REFERENCES Faculty(id)
);



-- Add missing relation: Student.group_id â†’ Group.id


ALTER TABLE Student
ADD CONSTRAINT fk_student_group FOREIGN KEY (group_id) REFERENCES `Group`(id);
